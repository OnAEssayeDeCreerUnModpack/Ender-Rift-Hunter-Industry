plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.100'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = "2.8.1"
group= "dev.gigaherz.enderrift"

Provider<String> minecraftVersion(Transformer<String, String> mapper) {
    return project.userDevRuntime.runtimes.map(r -> r.values().first().specification.minecraftVersion).map(mapper)
}

base {
    archivesName = minecraftVersion { "EnderRift-${it}" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    mavenCentral()
    mavenLocal()
    maven {
        url "$projectDir/../CommonMaven"
    }
    maven {
        url 'https://dogforce-games.com/maven'
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url 'https://maven.mcmoddev.com/'
    }
    maven {
        url "https://github.com/TehNut/temporary-maven-thing/tree/master/maven"
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // JEI
        url "https://maven.blamejared.com/"
        // fallback: url = "https://modmaven.dev"
    }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        content {
            includeGroup 'appeng'
        }
    }
    flatDir { dirs 'deps' }
}

subsystems {
    parchment {
        minecraftVersion="1.20.4"
        mappingsVersion="2024.02.25"
    }
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', '' // 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        workingDirectory project.file('run')

        modSource project.sourceSets.main

        dependencies {
            runtime "com.googlecode.concurrent-locks:concurrent-locks:1.0.0"
        }
    }

    client {
    }

    server {
    }

    data {
        programArguments.addAll '--mod', 'enderrift', '--all', '--output', file('src/main/generated_resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

configurations {
    shade
}

dependencies {
    implementation 'net.neoforged:neoforge:20.4.210'

    compileOnly 'org.jetbrains:annotations:20.1.0'

    //runtimeOnly fg.deobf("dev.gigaherz.guidebook:Guidebook-1.19.1:3.6.1")

    implementation("dev.gigaherz.graph:GraphLib3:3.0.4")
    shade("dev.gigaherz.graph:GraphLib3:3.0.4") {
        transitive = false
    }

    compileOnly "appeng:appliedenergistics2-neoforge:17.11.0-beta:api"
    runtimeOnly "appeng:appliedenergistics2-neoforge:17.11.0-beta"

    implementation("com.googlecode.concurrent-locks:concurrent-locks:1.0.0")
    shade("com.googlecode.concurrent-locks:concurrent-locks:1.0.0")

    compileOnly "mezz.jei:jei-1.20.4-common-api:17.3.0.49"
    runtimeOnly "mezz.jei:jei-1.20.4-common:17.3.0.49"
    compileOnly "mezz.jei:jei-1.20.4-neoforge-api:17.3.0.49"
    runtimeOnly "mezz.jei:jei-1.20.4-neoforge:17.3.0.49"

    // TheOneProbe - 1.20.4_neo-11.0.2
    compileOnly "curse.maven:the-one-probe-245211:5159289"
    //runtimeOnly "curse.maven:the-one-probe-245211:5159289"

    // Jade (WAILA) - [NeoForge 1.20.4] 13.3.1
    compileOnly "curse.maven:jade-324717:5109393"
    runtimeOnly "curse.maven:jade-324717:5109393"

    //compile fileTree(dir: 'libs', include: '*.jar')

    //runtimeOnly fg.deobf("flatdir:Industrial-Reborn-1.16.1:0.7.0")
    //runtimeOnly fg.deobf("flatdir:tesseract:1.0.7-mc1.16")

    // PipeZ - 1.19-1.0.6
    // compileOnly fg.deobf("curse.maven:pipez-443900:3877192")
    // runtimeOnly fg.deobf("curse.maven:pipez-443900:3877192")
    
    // Spark - 1.19-1.9.25
    // compileOnly fg.deobf("curse.maven:spark-361579:3875647")
    // runtimeOnly fg.deobf("curse.maven:spark-361579:3875647")
    
    // SolarGeneration - 1.19-5.0.1
    // compileOnly fg.deobf("curse.maven:solargeneration-336538:3873840")
    // runtimeOnly fg.deobf("curse.maven:solargeneration-336538:3873840")
    
    // EdivadLib - 1.19-1.0.2
    // compileOnly fg.deobf("curse.maven:edivadlib-638508:3864277")
    // runtimeOnly fg.deobf("curse.maven:edivadlib-638508:3864277")
}

jar {
    archiveClassifier = 'slim'
}

shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    relocate 'dev.gigaherz.graph3', "${project.group}.shadow.graphlib3"
    relocate 'com.googlecode.concurentlocks', "${project.group}.shadow.concurentlocks"
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
                "Specification-Title": "enderrift",
                "Specification-Vendor": "gigaherz",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor" :"gigaherz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

artifacts {
    archives shadowJar
}
